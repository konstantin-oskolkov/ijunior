{
 class Program
   {
      private static void Main(string[] args)
      {
         bool isRunning = true;
         Guild guild = new Guild();
         while (isRunning)
         {
            Console.Clear();
            Console.WriteLine("Выберите действие. \n1 - добавить бойца. \n2 - удалить бойца. \n3 - изменить статус бана бойца. \n4 - вывести базу бойцов на экран. \n5 - Выход.");
            Console.Write("\nВведите команду: ");
            string input = Console.ReadLine();
            Console.WriteLine();
            switch (input)
            {
               case "1":
                  guild.AddWarrior();
                  break;

               case "2":
                  guild.DeleteWarrior();
                  break;

               case "3":
                  guild.SetWarriorBan();
                  break;

               case "4":
                  guild.ShowWarriors();
                  Console.ReadKey();
                  break;

               case "5":
                  isRunning = false;
                  break;

               default:
                  Console.Write("\nВы ввели некорректные данные. Введите число: от 1 до 5");
                  Console.ReadKey();
                  break;
            }
         }
      }
   }

   class Guild
   {
      private List<Warrior> _warriors = new List<Warrior>();

      public void AddWarrior()
      {
         Console.Write("Введите ник бойца: ");
         string nickname = Console.ReadLine();

         if (CheckName(nickname))
         {
            Console.Write("Введите уровень бойца: ");
            int level = ReadInteger();

            Warrior warrior = new Warrior(level, nickname);

            _warriors.Add(warrior);
         }
         else
         {
            Console.WriteLine("Такое имя уже есть.");
            Console.ReadKey();
         }
      }

      public bool DeleteWarrior()
      {
         ShowWarriors();

         Console.Write("\nВведите номер бойца, которого хотели бы удалить из базы: ");
         Warrior warrior = FindById(ReadInteger());

         if (warrior == null)
         {
            Console.Write($"Нет такого бойца");
            Console.ReadKey();
            return false;
         }
         else
         {
            Console.Write($"Боец удален из базы");
            _warriors.Remove(warrior);
            Console.ReadKey();
            return true;
         }
      }

      public void SetWarriorBan()
      {
         ShowWarriors();

         Console.Write($"\nВведите номер бойца, которому нужно изменить статус бана: ");
         Warrior warrior = FindById(ReadInteger());

         if (warrior == null)
         {
            Console.Write("Вы ввели некорректные данные.");
            Console.ReadKey();
         }
         else
         {
            if (warrior.Banned)
            {
               warrior.UnbanWarrior();
               Console.Write($"Боец: {warrior.Nickname} бан снят.");
               Console.ReadKey();
            }
            else
            {
               warrior.BanWarrior();
               Console.Write($"Боец: {warrior.Nickname} забанен.");
               Console.ReadKey();
            }
         }
      }

      public void ShowWarriors()
      {
         if (_warriors.Count > 0)
         {
            int idWarrior = 1;
            foreach (var warrior in _warriors)
            {
               Console.WriteLine($" №: {idWarrior}. " + warrior.ShowInfo());
               idWarrior++;
            }
         }
         else
         {
            Console.Write("Гильдия пока пуста.");
            Console.ReadKey();
         }
      }

      private Warrior FindById(int idWarrior)
      {
         int count = 1;
         foreach (var warrior in _warriors)
         {
            if (count == idWarrior)
            {
               return warrior;
            }
            count++;
         }
         return null;
      }

      private bool CheckName(string nickname)
      {
         foreach (var warrior in _warriors)
         {
            if (warrior.Nickname.ToLower() == nickname.ToLower())
            {
               return false;
            }
         }
         return true;
      }

      private int ReadInteger()
      {
         int number;

         while (!int.TryParse(Console.ReadLine(), out number))
         {
            Console.ForegroundColor = ConsoleColor.Red;
            Console.Write(" Вы ввели некорректные данные. Введите число: ");
            Console.ResetColor();
         }
         return number;
      }
   }

   class Warrior
   {
      public int Id { get; set; }
      public int Level { get; private set; }
      public string Nickname { get; private set; }
      public bool Banned { get; private set; }

      public Warrior(int level, string nickname, bool banned = false)
      {
         Level = level;
         Nickname = nickname;
         Banned = banned;
      }

      public void BanWarrior()
      {
         Banned = true;
      }

      public void UnbanWarrior()
      {
         Banned = false;
      }

      public string ShowInfo()
      {
         return $" Боец: {Nickname}. Уровень: {Level}. Статус бана: " + (Banned ? " забанен" : "бана нет");
      }
   }
}
