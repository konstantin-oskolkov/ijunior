namespace OOP_5
{
  class Program
   {
      static void Main(string[] args)
      {
         var storage = new ServiceBook();

         while (true)
         {
            Console.Write("\nМЕНЮ: \n1 - Добавить книгу \n2 - Удалить книгу \n3 - Показать все книги \n4 - Поиск книги \n5 - Выход \nномер команды: ");
            string select = Console.ReadLine();

            switch (select)
            {
               case "1":
                  storage.CreateBook(
                     ReadValue("название книги: "),
                     ReadValue("автор: "),
                     ReadValue("год издания: ")
                     );
                  break;

               case "2":
                  storage.ShowAllBook().ForEach(i => Console.WriteLine(i));
                  int.TryParse(ReadValue("введите номер книги для удаления: "), out int number);

                  if (storage.RemoveBook(number))
                     Console.Write("Книга удалена");
                  else
                     Console.WriteLine("нет такой книги");
                  break;

               case "3":
                  storage.ShowAllBook().ForEach(i => Console.WriteLine(i));
                  break;

               case "4":
                  storage.FindBooks(ReadValue("Введите для поиска автора, название или дату: ")).ForEach(Console.WriteLine);
                  break;

               case "5":
                  return;

               default:
                  Console.WriteLine("Нет такой команды");
                  break;
            }
            Console.ReadKey(); Console.Clear();
         }

         string ReadValue(string message)
         {
            Console.Write($"{message}");
            return Console.ReadLine();
         }
      }
   }

   class ServiceBook
   {
      private List<Book> storageBooks;

      public ServiceBook()
      {
         storageBooks = new List<Book>()
           {
            new Book("Завершение", "Пупкин", "2020"),
            new Book("Посторонним В", "Пятачек", "1969"),
            new Book("Я в грязи или крови", "Бараш", "2010"),
            new Book("Начало", "Пупкин", "2010")
           };
      }

      public void CreateBook(string title, string author, string date)
      {
         storageBooks.Add(new Book(title, author, date));
      }

      public bool RemoveBook(int id)
      {
         var removeBook = storageBooks.Find(book => book.Id == id);

         if (removeBook == null)
            return false;
         return storageBooks.Remove(removeBook);
      }

      public List<Book> FindBooks(string find)
      {
         return storageBooks.FindAll(book => (book.Author.Contains(find) || book.Title.Contains(find) || book.Date.Contains(find)));
      }

      public List<Book> ShowAllBook()
      {
         return storageBooks;
      }

   }

   class Book
   {
      public static int count { get; private set; } = 0;
      public int Id { get; private set; }
      public string Title { get; private set; }
      public string Date { get; private set; }
      public string Author { get; private set; }

      public Book(string title, string author, string date)
      {
         Id = ++count;
         Title = title;
         Author = author;
         Date = date;
      }

      public override string ToString()
      {
         return "номер: " + Id + " | название: " + Title + " | автор: " + Author + " | год издания: " + Date;
      }
   }
}
