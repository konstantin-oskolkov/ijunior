 class Program
   {
      static void Main(string[] args)
      {
         int capacity = 5;

         Aquarium aquarium = new Aquarium(capacity);
         aquarium.Work();
      }
   }

   class Aquarium
   {
      private int _capacity;
      private List<Fish> _fishes = new List<Fish>();

      public Aquarium(int capacity)
      {
         _capacity = capacity;
      }

      public void Work()
      {
         bool _isWork = true;

         while (_isWork)
         {
            _fishes.ForEach(Console.WriteLine);

            switch (ReadValue("\n1 - добавить рыбу\n2 - убрать рыбу\n3 - выйти\n№ - "))
            {
               case "1":
                  AddFish(ReadValue("имя рыбы: "));
                  break;

               case "2":
                  RemoveFish(ReadValue("какую рыбу вы хотите убрать №: "));
                  break;

               case "3":
                  _isWork = false;
                  break;
            }

            for (int i = 0; i < _fishes.Count; i++)
            {
               if (_fishes[i].IsAlive)
               {
                  _fishes[i].AddAge();
               }
               else
               {
                  _fishes.Remove(_fishes[i]);
                  i--;
               }
            }

            Console.Clear();
         }
      }

      private string ReadValue(string message)
      {
         Console.Write(message);
         return Console.ReadLine();
      }

      private void AddFish(string name)
      {
         if (_capacity > _fishes.Count)
         {
            Fish fish = new Fish(name);
            _fishes.Add(fish);
         }
         else
         {
            Console.WriteLine("аквариум полон");
            Console.ReadKey();
         }
      }

      private void RemoveFish(string fishId)
      {
         int number;

         if (int.TryParse(fishId, out number))
         {
            _fishes.Remove(_fishes.Find(fish => fish.Id == number));
         }
         else
         {
            Console.WriteLine("нет такой рыбы");
            Console.ReadKey();
         }
      }
   }

   class Fish
   {
      private static int count = 0;
      private int _maxAge = 11;
      public bool IsAlive => Age < _maxAge;

      public int Id { get; set; }
      public int Age { get; private set; }
      public string Name { get; private set; }

      public Fish(string name)
      {
         Id = ++count;
         Name = name;
      }

      public void AddAge()
      {
            Age++;
      }

      public override string ToString() => "Fish id: " + Id + " | имя: " + Name + (IsAlive ? " | возраст: " + Age + " | жива" : " | мертва");
   }
}
